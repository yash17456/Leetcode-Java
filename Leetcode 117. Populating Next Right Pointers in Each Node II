
https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/

/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution 
{
    public Node connect(Node root) 
    {
        if(root == null)
            return root;
        
        Queue<Node> queue = new LinkedList<Node>();
        queue.add(root);
        
        while(queue.size() > 0)
        {
            int size = queue.size();
            Node prev = null;
            //ArrayList<Node> list = new ArrayList<Node>();
            for(int i = 0; i < size; i++)
            {
                Node curr = queue.poll();
                curr.next = prev;
                prev = curr;
                
                if(curr.right != null)
                    queue.add(curr.right);
                
                if(curr.left != null)
                    queue.add(curr.left);
            }
        }
        
        return root;
    }
}
